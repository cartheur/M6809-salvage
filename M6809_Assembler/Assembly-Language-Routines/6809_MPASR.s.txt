	.macro	CLC
		ANDCC	#$FE
	.endm
;	Title:			Multiple-precision Arithmetic Shift Right
;
;	Name:			MPASR
;
;	Purpose:		Arithmetic shift right a multi-byte operand N bits.
;
;	Entry:
;				TOP OF STACK 
;				High byte of return address
;				Low  byte of return address Number of bits to shift
;				Length of the operand in bytes 
;				High byte of operand base address 
;				Low  byte of operand base address
;				The operand is stored with ARRAY[0] as its Least significant byte and 
;				ARRAY[LENGTH-1] as its most significant byte
;
;	Exit:
;
;				Operand shifted right with the most significant bit propagated.
;				Carry Last bit shifted from least significant position.
;	Registers Used:		A,B,CC,U,X
;
;	Time:			50 cycles overhead plus (13 Length) + 28 cycles per shift
;
;	Size:			Program 39 bytes
;
MPASR:
	LDU	,S		; SAVE RETURN ADDRESS
	;
	;	EXIT IF LENGTH OF OPERAND OR NUMBER OF BITS TO SHIFT
	;	IS ZERO. CARRY IS CLEARED IN EITHER CASE
	;
	CLC			; CLEAR CARRY INITIALLY
	LDA	2,S		; GET NUMBER OF BITS TO SHIFT
	BEQ	EXITAS		; EXIT IF NUMBER OF BITS TO SHIFT IS ZERO
	LDA	3,S		; GET LENGTH OF OPERAND
	BEQ	EXITAS		; EXIT IF LENGTH OF OPERAND IS ZERO
				; SAVE POINTER TO MOST SIGNIFICANT BYTE OF OPERAND
	DECA	OFFSET		; OF MOST SIGNIFICANT BYTE = LENGTH OF OPERAND 1
	LDX	4,S		; GET BASE ADDRESS OF OPERAND
	LEAX	A,X		; POINT TO MOST SIGNIFICANT BYTE
	STX	,S		; SAVE POINTER TO MOST SIGNIFICANT BYTE
	;
	; SHIFT ENTIRE OPERAND RIGHT ONE BIT ARITHMETICALLY
	; USE SIGN OF MOST - SIGNIFICANT BYTE AS
	; INITIAL CARRY INPUT TO PRODUCE ARITHMETIC SHIFT
	;
ASRLP:
	LDX	,S		; POINT TO MOST SIGNIFICANT BYTE

	
	LDA	,X+		; GET MOST SIGNIFICANT BYTE
	ASLA			; SHIFT BIT 7 TO CARRY FOR SIGN EXTENSION
	LDB	3,S		; GET LENGTH OF OPERAND IN BYTES
	;
	; SHIFT EACH BYTE OF OPERAND RIGHT ONE BIT
	; START WITH MOST SIGNIFICANT BYTE
	;
ASRLP1:
	ROR	,-X		; ROTATE NEXT BYTE RIGHT
	DECB
	BNE	ASRLP1		; CONTINUE THROUGH ALL BYTES
	;
	; COUNT NUMBER OF SHIFTS
	;
	DEC	2,S		; DECREMENT NUMBER OF SHIFTS
	BNE	ASRLP		; CONTINUE UNTIL DONE
	;
	; REMOVE PARAMETERS FROM STACK AND EXIT
	; REMOVE PARAMETERS FROM STACK EXIT TO RETURN ADDRESS
	;
EXITAS:

	LEAS	6,S		; REMOVE PARAMETERS FROM STACK 
	JMP	,U		; EXIT TO RETURN ADDRESS
;
; SAMPLE EXECUTION
;
SC4C:
	LDA	SHIFTS		; GET NUMBER OF SHIFTS
	LDB	#SZAY		; GET LENGTH OF OPERAND IN BYTES
	LDX	AYADR		; GET BASE ADDRESS OF OPERAND
	PSHS	A,B,X		; SAVE PARAMETERS IN STACK
	JSR	MPASR		; ARITHMETIC SHIFT RIGHT
				;
				; RESULT OF SHIFTING AY=EDCBA987654321H
				; 4 BITS IS AY=FEDCBA98765432H, C=0
				; IN MEMORY AY = 032H
				; AY+1 = 054H
				; AY+2 = 076H
				; AY+3 = 098H
				; AY+4 = 0BAH
				; AY+5 = 0DCH
				; AY+6 = 0FEH
	BRA	SC4C
;
; DATA SECTION
;
SZAY 	EQU	7		; LENGTH OF OPERAND IN BYTES

SHIFTS:	FCB	4		; NUMBER OF SHIFTS 		

AYADR:	FDB	AY		; BASE ADDRESS OF OPERAND		

AY:	FCB	$21,$43,$65,$87,$A9,$CB,$ED
	END

