;	Title:			Write Line
;
;	Name:			WRLINE
;
;	Purpose:		Write characters to output device
;
;	Entry:			Register X = Base address of buffer
;				Register A = Number of characters in buffer
;
;	Exit:			None
;
;	Registers Used:		ALL
;
;	Time:			Indeterminate, depends on the speed of the WRCHAR routine.
;
;	Size:			Program		14 bytes
;
WRLINE:
	;
	; EXIT IMMEDIATELY IF BUFFER IS EMPTY
	;
	TSTA			; TEST NUMBER OF CHARACTERS IN BUFFER	
	BEQ	EXITWL		; BRANCH (EXIT) IF BUFFER EMPTY
				; X = BASE ADDRESS OF BUFFER
	;
	; LOOP SENDING CHARACTERS TO OUTPUT DEVICE
	;
	TFR	A,B		; MOVE CHARACTER COUNT TO B
WRLLP:
	LDA	,X+		; GET NEXT CHARACTER
	JSR	WRCHAR		; SEND CHARACTER
	DECB			; DECREMENT COUNTER
	BNE	WRLLP		; CONTINUE UNTIL ALL CHARACTERS SENT
EXITWL:
	RTS			; EXIT
	;
; ********************************************************
;
; THE FOLLOWING SUBROUTINES ARE TYPICAL EXAMPLES USING THE
; RADIO SHACK COLOR COMPUTER WITH BASIC IN ROM
;
; ********************************************************
;
; ****************************************
; ROUTINE:		WRCHAR
; PURPOSE:		WRITE CHARACTER TO 0UTPUT DEVICE
; ENTRY:		REGISTER A = CHARACTER
; EXIT:			NONE
; REGISTERS USED:	ALL
;
; ****************************************
; COLOR COMPUTER EQUATES
;
CLRSCN	EQU	$A928		; STARTING ADDRESS FOR ROUTINE THAT CLEARS SCREEN 
;
OUTPTR	EQU	$A002		; POINTER TO OUTPUT ROUTINE 
				; UNIT NUMBER GOES IN LOCATION
				; $006F (0 = SCREEN) 
				; CHARACTER GOES IN REGISTER A
;
WRCHAR:
;
;	SEND CHARACTER TO OUTPUT DEVICE FROM REGISTER A 
;	LOCATION $006F SHOULD CONTAIN A UNIT NUMBER
;	(DEFAULT IS SCREEN = 0)
;
;
;	SAMPLE EXECUTION:
	JSR	[OUTPTR]	; SEND CHARACTER
	RTS
;
; CHARACTER EQUATES
;
CR	EQU	$0D		; CARRIAGE RETURN FOR CONSOLE
LF	EQU	$0A		; LINE FEED FOR CONSOLE 
PROMPT	EQU	"?"		; OPERATOR PROMPT = QUESTION MARK
;
SC8B:
	;
	; CALL BASIC SUBROUTINE THAT CLEARS SCREEN
	;
	JSR	CLRSCN		; CLEAR SCREEN
	;
	; READ LINE FROM CONSOLE
	;
	LDA	#PROMPT 	; OUTPUT PROMPT ('?)
	JSR	WRCHAR 
	LDX	#INBUFF 	; POINT TO INPUT BUFFER
	JSR	RDLINE		; READ LINE FROM CONSOLE
	PSHS	A		; SAVE LINE LENGTH IN STACK
	LDA	#2 		; OUTPUT LINE FEED, CARRIAGE RETURN
	LDX	#CRLF 
	JSR	WRCHAR
	;
	; WRITE LINE TO CONSOLE
	;
	PULS	A		; RESTORE LINE LENGTH FROM STACK
	LDX	#INBUFF		; GET BASE ADDRESS OF BUFFER
	JSR	WRLINE		; WRITE LINE
	LDX	#CRLF		; OUTPUT CARRIAGE RETURN, LINE FEED
	LDA	#2		; LENGTH OF CRLF STRING 
	JSR	WRLINE		; WRITE CRLF STRING
	BRA	SC8B		; REPEAT CLEAR, READ, WRITE SEQUENCE	
;
; DATA SECTION
;
CRLF 	FCB	CR,LF		; CARRIAGE RETURN, LINE FEED
LINBUF	EQU	$10		; LENGTH OF INPUT BUFFER
INBUFF:	RMB	LINBUF		; DATA BUFFER


; Need this dummy label to compile:

.org	$F000

RDLINE:



	END


