; Title:		Jump Table
;
; Name:			JTAB
;
; Purpose:		Given an index, jump to the subroutine with that index in a table
;
; Entry:		Register A is the subroutine number 
;				(0 to LENSUB-1, the number of subroutines)
;				LENSUB must be less than or equal to 128.
;
; Exit:			If the routine number is valid
;				then execute the routine
;			else
;				Carry flag equals 1
;
; Registers Used:	A,CC,X
;
; Time:			17 cycles plus execution time of subroutine
;
; Size:			Program 13 bytes plus size of table (2*LENSUB)
;
;	EXIT WITH CARRY SET IF ROUTINE NUMBER IS INVALID THAT IS, IF IT IS T00 LARGE FOR TABLE (>LENSUB-1)
;
	CMPA	#LENSUB		; COMPARE ROUTINE NUMBER, TABLE LENGTH
	BCC	EREXIT		; BRANCH (EXIT) IF ROUTINE NUMBER TOO LARGE
;
;	INDEX INTO TABLE OF WORD-LENGTH ADDRESSES
;	OBTAIN ROUTINE ADDRESS FROM TABLE AND TRANSFER CONTROL TO IT
;
;
;



	ASLA			; DOUBLE INDEX FOR WORD-LENGTH ENTRIES
	LDX	#JMPTBL		; GET BASE ADDRESS OF JUMP TABLE
	JMP			; JUMP INDIRECTLY TO SUBROUTINE
;
;	ERROR EXIT - EXIT WITH CARRY SET 
;
EREXIT:	SEC			; INDICATE BAD ROUTINE NUMBER
	RTS
;
	LENSUB	EQU	3	; NUMBER OF SUBROUTINES IN TABLE
JMPTBL:	
	FDB	SUBO		; ROUTINE 0
	FDB	SUB1		; ROUTINE 1
	FDB	SUB2		; ROUTINE 2
;
; THREE TEST SUBROUTINES FOR JUMP TABLE
;
SUB0:	LDA #1			; TEST ROUTINE 0 SETS (A) = 1
	RTS
;
SUB1:	LDA #2			; TEST ROUTINE 1 SETS (A) = 2
	RTS
;
SUB2:	LDA #3			; TEST ROUTINE 2 SETS (A) = 3
	RTS
;
;	SAMPLE EXECUTION
;
;
; PROGRAM SECTION
;
SC6H:
	CLRA			; EXECUTE ROUTINE 0
	JSR	JTAB		; AFTER EXECUTION, (A) = 1
	LDA	#1		; EXECUTE ROUTINE 1
	JSR	JTAB		; AFTER EXECUTION, (A) = 2
	LDA	#2		; EXECUTE ROUTINE 2
	JSR	JTAB		; AFTER EXECUTION, (A) = 3
	LDA	#3		; EXECUTE ROUTINE 3
	JSR	JTAB		; AFTER EXECUTION, CARRY = 1
				; INDICATING BAD ROUTINE NUMBER
	BRA	SC6H:		; LOOP FOR MORE TESTS

END
